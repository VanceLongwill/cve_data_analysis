import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick


def top_vulns(df: pd.DataFrame):
    top10 = df['CWE-NAME'].value_counts(normalize=True).head(10)
    return top10


def dispersion_of_vulnerability_types_by_year(df: pd.DataFrame):
    # get the frequencies of each vuln type by year
    freqs_by_year = pd.crosstab(
        index=df['Year'],
        columns=df['CWE-NAME'],
    )

    dispersion = freqs_by_year.std(axis=1, numeric_only=True)

    dispersion.plot(
        kind='line',
        title='Stardard deviation of vulnerability types over time',
        ylabel='Standard deviation',
        xlabel='Year',
    )
    plt.show()


def vulnerability_types_by_year(df: pd.DataFrame):
    # get a list of the top 10 most frequently reported vulnerability types overall
    top10 = top_vulns(df)
    top_10_keys = top10.keys()

    # get the relative frequencies of each vuln type by year
    rel_freqs_by_year = pd.crosstab(
        index=df['Year'],
        columns=df['CWE-NAME'],
        normalize='index',  # 'index' for by row i.e. relative frequency
    )

    # select the relative frequencies of only the top 10 most frequent of all time
    top_10_rel_freq_over_time = rel_freqs_by_year[top_10_keys]

    pl = top_10_rel_freq_over_time.plot(
        kind='line',
        ylim=(0, 1),
        ylabel='Relative frequency (percentage)',
        xlabel='Year',
        title='Relative frequencies of the overall top 10 vulnerability types'
    )

    # format decimal as percentage
    pl.yaxis.set_major_formatter(mtick.PercentFormatter(1.0))

    plt.show()
