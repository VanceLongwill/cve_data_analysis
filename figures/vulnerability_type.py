import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
import numpy as np

from figures import cwe_severity


def top_vulns(df: pd.DataFrame):
    top10 = df['CWE-NAME'].value_counts(normalize=True).head(10)
    return top10


def correlation_of_vulnerability_type_dispersion_and_count(df: pd.DataFrame):
    # get the frequencies of each vuln type by year
    freqs_by_year = pd.crosstab(
        index=df['Year'],
        columns=df['CWE-NAME'],
    )

    dispersion = freqs_by_year.std(axis=1, numeric_only=True)
    print(dispersion)

    sanitized = cwe_severity.remove_non_numerical_scores(df)
    grouped = sanitized.groupby('Year')
    stats = grouped.agg(Count=pd.NamedAgg(column='Year', aggfunc='count'))
    stats = stats.rename(
        columns={'Count': 'Number of vulnerabilities disclosed'}
    )

    stats['Standard deviation'] = dispersion

    stats.plot(
        kind='scatter',
        x='Number of vulnerabilities disclosed',
        y='Standard deviation',
        title="Scatter plot of the number of vulnerabilities disclosed against the standard deviation of the vulnerability types",
    )

    x = stats['Number of vulnerabilities disclosed']
    y = stats['Standard deviation']
    a, b = np.polyfit(x, y, 1)
    plt.plot(x, a*x+b, color='orange')

    plt.show()


def dispersion_of_vulnerability_types_by_year(df: pd.DataFrame):
    # get the frequencies of each vuln type by year
    freqs_by_year = pd.crosstab(
        index=df['Year'],
        columns=df['CWE-NAME'],
    )

    dispersion = freqs_by_year.std(axis=1, numeric_only=True)

    sanitized = cwe_severity.remove_non_numerical_scores(df)
    grouped = sanitized.groupby('Year')
    stats = grouped.agg(Count=pd.NamedAgg(column='Year', aggfunc='count'))
    stats = stats.rename(
        columns={'Count': 'Number of vulnerabilities disclosed'}
    )
    stats['Standard deviation of vulnerability types'] = dispersion

    ax = stats.plot(
        label='Number of vulnerabilities disclosed',
        kind='line',
        ylabel="Number of vulnerabilities disclosed",
        title="The standard deviation of vulnerability types vs the total number of vulnerabilities",
        secondary_y='Standard deviation of vulnerability types',
    )

    ax1 = ax.twinx()
    ax1.set_ylabel("Standard deviation of vulnerability types", labelpad=32)
    ax1.set_yticks([])

    plt.show()


def vulnerability_types_by_year(df: pd.DataFrame):
    # get a list of the top 10 most frequently reported vulnerability types overall
    top10 = top_vulns(df)
    top_10_keys = top10.keys()

    # get the relative frequencies of each vuln type by year
    rel_freqs_by_year = pd.crosstab(
        index=df['Year'],
        columns=df['CWE-NAME'],
        normalize='index',  # 'index' for by row i.e. relative frequency
    )

    # select the relative frequencies of only the top 10 most frequent of all time
    top_10_rel_freq_over_time = rel_freqs_by_year[top_10_keys]

    pl = top_10_rel_freq_over_time.plot(
        kind='line',
        ylim=(0, 1),
        ylabel='Relative frequency (percentage)',
        xlabel='Year',
        title='Relative frequencies of the overall top 10 most common vulnerability types'
    )

    # format decimal as percentage
    pl.yaxis.set_major_formatter(mtick.PercentFormatter(1.0))

    plt.show()
